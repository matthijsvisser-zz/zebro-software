
communication.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000362  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000002c  00802000  00000362  000003f6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  0080202c  0080202c  00000422  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000422  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  00000452  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000da7  00000000  00000000  000004e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000412  00000000  00000000  00001289  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000542  00000000  00000000  0000169b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000dc  00000000  00000000  00001be0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000007dd  00000000  00000000  00001cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000165  00000000  00000000  00002499  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  000025fe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	fd c0       	rjmp	.+506    	; 0x1fc <__ctors_end>
   2:	00 00       	nop
   4:	1f c1       	rjmp	.+574    	; 0x244 <__bad_interrupt>
   6:	00 00       	nop
   8:	1d c1       	rjmp	.+570    	; 0x244 <__bad_interrupt>
   a:	00 00       	nop
   c:	1b c1       	rjmp	.+566    	; 0x244 <__bad_interrupt>
   e:	00 00       	nop
  10:	19 c1       	rjmp	.+562    	; 0x244 <__bad_interrupt>
  12:	00 00       	nop
  14:	17 c1       	rjmp	.+558    	; 0x244 <__bad_interrupt>
  16:	00 00       	nop
  18:	15 c1       	rjmp	.+554    	; 0x244 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	13 c1       	rjmp	.+550    	; 0x244 <__bad_interrupt>
  1e:	00 00       	nop
  20:	11 c1       	rjmp	.+546    	; 0x244 <__bad_interrupt>
  22:	00 00       	nop
  24:	0f c1       	rjmp	.+542    	; 0x244 <__bad_interrupt>
  26:	00 00       	nop
  28:	0d c1       	rjmp	.+538    	; 0x244 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	0b c1       	rjmp	.+534    	; 0x244 <__bad_interrupt>
  2e:	00 00       	nop
  30:	09 c1       	rjmp	.+530    	; 0x244 <__bad_interrupt>
  32:	00 00       	nop
  34:	07 c1       	rjmp	.+526    	; 0x244 <__bad_interrupt>
  36:	00 00       	nop
  38:	05 c1       	rjmp	.+522    	; 0x244 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	03 c1       	rjmp	.+518    	; 0x244 <__bad_interrupt>
  3e:	00 00       	nop
  40:	01 c1       	rjmp	.+514    	; 0x244 <__bad_interrupt>
  42:	00 00       	nop
  44:	ff c0       	rjmp	.+510    	; 0x244 <__bad_interrupt>
  46:	00 00       	nop
  48:	fd c0       	rjmp	.+506    	; 0x244 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	fb c0       	rjmp	.+502    	; 0x244 <__bad_interrupt>
  4e:	00 00       	nop
  50:	f9 c0       	rjmp	.+498    	; 0x244 <__bad_interrupt>
  52:	00 00       	nop
  54:	f7 c0       	rjmp	.+494    	; 0x244 <__bad_interrupt>
  56:	00 00       	nop
  58:	f5 c0       	rjmp	.+490    	; 0x244 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	f3 c0       	rjmp	.+486    	; 0x244 <__bad_interrupt>
  5e:	00 00       	nop
  60:	f1 c0       	rjmp	.+482    	; 0x244 <__bad_interrupt>
  62:	00 00       	nop
  64:	ef c0       	rjmp	.+478    	; 0x244 <__bad_interrupt>
  66:	00 00       	nop
  68:	ed c0       	rjmp	.+474    	; 0x244 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	eb c0       	rjmp	.+470    	; 0x244 <__bad_interrupt>
  6e:	00 00       	nop
  70:	e9 c0       	rjmp	.+466    	; 0x244 <__bad_interrupt>
  72:	00 00       	nop
  74:	e7 c0       	rjmp	.+462    	; 0x244 <__bad_interrupt>
  76:	00 00       	nop
  78:	e5 c0       	rjmp	.+458    	; 0x244 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	e3 c0       	rjmp	.+454    	; 0x244 <__bad_interrupt>
  7e:	00 00       	nop
  80:	e1 c0       	rjmp	.+450    	; 0x244 <__bad_interrupt>
  82:	00 00       	nop
  84:	df c0       	rjmp	.+446    	; 0x244 <__bad_interrupt>
  86:	00 00       	nop
  88:	dd c0       	rjmp	.+442    	; 0x244 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	db c0       	rjmp	.+438    	; 0x244 <__bad_interrupt>
  8e:	00 00       	nop
  90:	d9 c0       	rjmp	.+434    	; 0x244 <__bad_interrupt>
  92:	00 00       	nop
  94:	d7 c0       	rjmp	.+430    	; 0x244 <__bad_interrupt>
  96:	00 00       	nop
  98:	d5 c0       	rjmp	.+426    	; 0x244 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	d3 c0       	rjmp	.+422    	; 0x244 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	d1 c0       	rjmp	.+418    	; 0x244 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	cf c0       	rjmp	.+414    	; 0x244 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	cd c0       	rjmp	.+410    	; 0x244 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	cb c0       	rjmp	.+406    	; 0x244 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	c9 c0       	rjmp	.+402    	; 0x244 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	c7 c0       	rjmp	.+398    	; 0x244 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	c5 c0       	rjmp	.+394    	; 0x244 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	c3 c0       	rjmp	.+390    	; 0x244 <__bad_interrupt>
  be:	00 00       	nop
  c0:	c1 c0       	rjmp	.+386    	; 0x244 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	bf c0       	rjmp	.+382    	; 0x244 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	bd c0       	rjmp	.+378    	; 0x244 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	bb c0       	rjmp	.+374    	; 0x244 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	b9 c0       	rjmp	.+370    	; 0x244 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	b7 c0       	rjmp	.+366    	; 0x244 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	b5 c0       	rjmp	.+362    	; 0x244 <__bad_interrupt>
  da:	00 00       	nop
  dc:	b3 c0       	rjmp	.+358    	; 0x244 <__bad_interrupt>
  de:	00 00       	nop
  e0:	b1 c0       	rjmp	.+354    	; 0x244 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	af c0       	rjmp	.+350    	; 0x244 <__bad_interrupt>
  e6:	00 00       	nop
  e8:	ad c0       	rjmp	.+346    	; 0x244 <__bad_interrupt>
  ea:	00 00       	nop
  ec:	ab c0       	rjmp	.+342    	; 0x244 <__bad_interrupt>
  ee:	00 00       	nop
  f0:	a9 c0       	rjmp	.+338    	; 0x244 <__bad_interrupt>
  f2:	00 00       	nop
  f4:	a7 c0       	rjmp	.+334    	; 0x244 <__bad_interrupt>
  f6:	00 00       	nop
  f8:	a5 c0       	rjmp	.+330    	; 0x244 <__bad_interrupt>
  fa:	00 00       	nop
  fc:	a3 c0       	rjmp	.+326    	; 0x244 <__bad_interrupt>
  fe:	00 00       	nop
 100:	a1 c0       	rjmp	.+322    	; 0x244 <__bad_interrupt>
 102:	00 00       	nop
 104:	9f c0       	rjmp	.+318    	; 0x244 <__bad_interrupt>
 106:	00 00       	nop
 108:	9d c0       	rjmp	.+314    	; 0x244 <__bad_interrupt>
 10a:	00 00       	nop
 10c:	9b c0       	rjmp	.+310    	; 0x244 <__bad_interrupt>
 10e:	00 00       	nop
 110:	99 c0       	rjmp	.+306    	; 0x244 <__bad_interrupt>
 112:	00 00       	nop
 114:	97 c0       	rjmp	.+302    	; 0x244 <__bad_interrupt>
 116:	00 00       	nop
 118:	95 c0       	rjmp	.+298    	; 0x244 <__bad_interrupt>
 11a:	00 00       	nop
 11c:	93 c0       	rjmp	.+294    	; 0x244 <__bad_interrupt>
 11e:	00 00       	nop
 120:	91 c0       	rjmp	.+290    	; 0x244 <__bad_interrupt>
 122:	00 00       	nop
 124:	8f c0       	rjmp	.+286    	; 0x244 <__bad_interrupt>
 126:	00 00       	nop
 128:	8d c0       	rjmp	.+282    	; 0x244 <__bad_interrupt>
 12a:	00 00       	nop
 12c:	8b c0       	rjmp	.+278    	; 0x244 <__bad_interrupt>
 12e:	00 00       	nop
 130:	89 c0       	rjmp	.+274    	; 0x244 <__bad_interrupt>
 132:	00 00       	nop
 134:	87 c0       	rjmp	.+270    	; 0x244 <__bad_interrupt>
 136:	00 00       	nop
 138:	85 c0       	rjmp	.+266    	; 0x244 <__bad_interrupt>
 13a:	00 00       	nop
 13c:	83 c0       	rjmp	.+262    	; 0x244 <__bad_interrupt>
 13e:	00 00       	nop
 140:	81 c0       	rjmp	.+258    	; 0x244 <__bad_interrupt>
 142:	00 00       	nop
 144:	7f c0       	rjmp	.+254    	; 0x244 <__bad_interrupt>
 146:	00 00       	nop
 148:	7d c0       	rjmp	.+250    	; 0x244 <__bad_interrupt>
 14a:	00 00       	nop
 14c:	7b c0       	rjmp	.+246    	; 0x244 <__bad_interrupt>
 14e:	00 00       	nop
 150:	79 c0       	rjmp	.+242    	; 0x244 <__bad_interrupt>
 152:	00 00       	nop
 154:	77 c0       	rjmp	.+238    	; 0x244 <__bad_interrupt>
 156:	00 00       	nop
 158:	75 c0       	rjmp	.+234    	; 0x244 <__bad_interrupt>
 15a:	00 00       	nop
 15c:	73 c0       	rjmp	.+230    	; 0x244 <__bad_interrupt>
 15e:	00 00       	nop
 160:	71 c0       	rjmp	.+226    	; 0x244 <__bad_interrupt>
 162:	00 00       	nop
 164:	6f c0       	rjmp	.+222    	; 0x244 <__bad_interrupt>
 166:	00 00       	nop
 168:	6d c0       	rjmp	.+218    	; 0x244 <__bad_interrupt>
 16a:	00 00       	nop
 16c:	6b c0       	rjmp	.+214    	; 0x244 <__bad_interrupt>
 16e:	00 00       	nop
 170:	69 c0       	rjmp	.+210    	; 0x244 <__bad_interrupt>
 172:	00 00       	nop
 174:	67 c0       	rjmp	.+206    	; 0x244 <__bad_interrupt>
 176:	00 00       	nop
 178:	65 c0       	rjmp	.+202    	; 0x244 <__bad_interrupt>
 17a:	00 00       	nop
 17c:	63 c0       	rjmp	.+198    	; 0x244 <__bad_interrupt>
 17e:	00 00       	nop
 180:	61 c0       	rjmp	.+194    	; 0x244 <__bad_interrupt>
 182:	00 00       	nop
 184:	5f c0       	rjmp	.+190    	; 0x244 <__bad_interrupt>
 186:	00 00       	nop
 188:	5d c0       	rjmp	.+186    	; 0x244 <__bad_interrupt>
 18a:	00 00       	nop
 18c:	5b c0       	rjmp	.+182    	; 0x244 <__bad_interrupt>
 18e:	00 00       	nop
 190:	59 c0       	rjmp	.+178    	; 0x244 <__bad_interrupt>
 192:	00 00       	nop
 194:	57 c0       	rjmp	.+174    	; 0x244 <__bad_interrupt>
 196:	00 00       	nop
 198:	55 c0       	rjmp	.+170    	; 0x244 <__bad_interrupt>
 19a:	00 00       	nop
 19c:	53 c0       	rjmp	.+166    	; 0x244 <__bad_interrupt>
 19e:	00 00       	nop
 1a0:	51 c0       	rjmp	.+162    	; 0x244 <__bad_interrupt>
 1a2:	00 00       	nop
 1a4:	4f c0       	rjmp	.+158    	; 0x244 <__bad_interrupt>
 1a6:	00 00       	nop
 1a8:	4d c0       	rjmp	.+154    	; 0x244 <__bad_interrupt>
 1aa:	00 00       	nop
 1ac:	4b c0       	rjmp	.+150    	; 0x244 <__bad_interrupt>
 1ae:	00 00       	nop
 1b0:	49 c0       	rjmp	.+146    	; 0x244 <__bad_interrupt>
 1b2:	00 00       	nop
 1b4:	47 c0       	rjmp	.+142    	; 0x244 <__bad_interrupt>
 1b6:	00 00       	nop
 1b8:	45 c0       	rjmp	.+138    	; 0x244 <__bad_interrupt>
 1ba:	00 00       	nop
 1bc:	43 c0       	rjmp	.+134    	; 0x244 <__bad_interrupt>
 1be:	00 00       	nop
 1c0:	41 c0       	rjmp	.+130    	; 0x244 <__bad_interrupt>
 1c2:	00 00       	nop
 1c4:	3f c0       	rjmp	.+126    	; 0x244 <__bad_interrupt>
 1c6:	00 00       	nop
 1c8:	3d c0       	rjmp	.+122    	; 0x244 <__bad_interrupt>
 1ca:	00 00       	nop
 1cc:	3b c0       	rjmp	.+118    	; 0x244 <__bad_interrupt>
 1ce:	00 00       	nop
 1d0:	39 c0       	rjmp	.+114    	; 0x244 <__bad_interrupt>
 1d2:	00 00       	nop
 1d4:	37 c0       	rjmp	.+110    	; 0x244 <__bad_interrupt>
 1d6:	00 00       	nop
 1d8:	35 c0       	rjmp	.+106    	; 0x244 <__bad_interrupt>
 1da:	00 00       	nop
 1dc:	33 c0       	rjmp	.+102    	; 0x244 <__bad_interrupt>
 1de:	00 00       	nop
 1e0:	31 c0       	rjmp	.+98     	; 0x244 <__bad_interrupt>
 1e2:	00 00       	nop
 1e4:	2f c0       	rjmp	.+94     	; 0x244 <__bad_interrupt>
 1e6:	00 00       	nop
 1e8:	2d c0       	rjmp	.+90     	; 0x244 <__bad_interrupt>
 1ea:	00 00       	nop
 1ec:	2b c0       	rjmp	.+86     	; 0x244 <__bad_interrupt>
 1ee:	00 00       	nop
 1f0:	29 c0       	rjmp	.+82     	; 0x244 <__bad_interrupt>
 1f2:	00 00       	nop
 1f4:	27 c0       	rjmp	.+78     	; 0x244 <__bad_interrupt>
 1f6:	00 00       	nop
 1f8:	25 c0       	rjmp	.+74     	; 0x244 <__bad_interrupt>
	...

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
 214:	10 e2       	ldi	r17, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	e2 e6       	ldi	r30, 0x62	; 98
 21c:	f3 e0       	ldi	r31, 0x03	; 3
 21e:	00 e0       	ldi	r16, 0x00	; 0
 220:	0b bf       	out	0x3b, r16	; 59
 222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
 224:	07 90       	elpm	r0, Z+
 226:	0d 92       	st	X+, r0
 228:	ac 32       	cpi	r26, 0x2C	; 44
 22a:	b1 07       	cpc	r27, r17
 22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
 22e:	1b be       	out	0x3b, r1	; 59

00000230 <__do_clear_bss>:
 230:	20 e2       	ldi	r18, 0x20	; 32
 232:	ac e2       	ldi	r26, 0x2C	; 44
 234:	b0 e2       	ldi	r27, 0x20	; 32
 236:	01 c0       	rjmp	.+2      	; 0x23a <.do_clear_bss_start>

00000238 <.do_clear_bss_loop>:
 238:	1d 92       	st	X+, r1

0000023a <.do_clear_bss_start>:
 23a:	a2 33       	cpi	r26, 0x32	; 50
 23c:	b2 07       	cpc	r27, r18
 23e:	e1 f7       	brne	.-8      	; 0x238 <.do_clear_bss_loop>
 240:	12 d0       	rcall	.+36     	; 0x266 <main>
 242:	8d c0       	rjmp	.+282    	; 0x35e <_exit>

00000244 <__bad_interrupt>:
 244:	dd ce       	rjmp	.-582    	; 0x0 <__vectors>

00000246 <SystemClock_init>:
#include <avr/io.h>
#include "clk.h"

void SystemClock_init(void)
{
	CCP			 =	CCP_IOREG_gc;
 246:	88 ed       	ldi	r24, 0xD8	; 216
 248:	84 bf       	out	0x34, r24	; 52
	OSC.CTRL	|=	OSC_RC32MEN_bm;
 24a:	e0 e5       	ldi	r30, 0x50	; 80
 24c:	f0 e0       	ldi	r31, 0x00	; 0
 24e:	80 81       	ld	r24, Z
 250:	82 60       	ori	r24, 0x02	; 2
 252:	80 83       	st	Z, r24
	while(!(OSC.STATUS & OSC_RC32MRDY_bm));
 254:	81 81       	ldd	r24, Z+1	; 0x01
 256:	81 ff       	sbrs	r24, 1
 258:	fd cf       	rjmp	.-6      	; 0x254 <SystemClock_init+0xe>
	CCP			 =	CCP_IOREG_gc;
 25a:	88 ed       	ldi	r24, 0xD8	; 216
 25c:	84 bf       	out	0x34, r24	; 52
	CLK.CTRL	 =	CLK_SCLKSEL_RC32M_gc;
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	80 93 40 00 	sts	0x0040, r24
 264:	08 95       	ret

00000266 <main>:


int main(void)
{
	//int frequent;
	SystemClock_init();
 266:	ef df       	rcall	.-34     	; 0x246 <SystemClock_init>
	uart_init();
 268:	1b d0       	rcall	.+54     	; 0x2a0 <uart_init>
	//uart_init_c0();
	stdout = &mystdout;
 26a:	8e e0       	ldi	r24, 0x0E	; 14
 26c:	90 e2       	ldi	r25, 0x20	; 32
 26e:	80 93 2e 20 	sts	0x202E, r24
 272:	90 93 2f 20 	sts	0x202F, r25
	stdin  = &mystdin;
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	90 e2       	ldi	r25, 0x20	; 32
 27a:	80 93 2c 20 	sts	0x202C, r24
 27e:	90 93 2d 20 	sts	0x202D, r25
	char input;
	//int input;
	//char test[64];
	
	TCC0.CTRLA = TC_CLKSEL_DIV64_gc; // prescaling 8
 282:	e0 e0       	ldi	r30, 0x00	; 0
 284:	f8 e0       	ldi	r31, 0x08	; 8
 286:	85 e0       	ldi	r24, 0x05	; 5
 288:	80 83       	st	Z, r24
	TCC0.PER = 0XFFFF; // maximal value
 28a:	8f ef       	ldi	r24, 0xFF	; 255
 28c:	9f ef       	ldi	r25, 0xFF	; 255
 28e:	86 a3       	std	Z+38, r24	; 0x26
 290:	97 a3       	std	Z+39, r25	; 0x27
	
	//printf("\e[3J");
	printf("sbiv 1000\n");
 292:	8c e1       	ldi	r24, 0x1C	; 28
 294:	90 e2       	ldi	r25, 0x20	; 32
 296:	36 d0       	rcall	.+108    	; 0x304 <puts>
	printf("GRWL\n");
 298:	86 e2       	ldi	r24, 0x26	; 38
 29a:	90 e2       	ldi	r25, 0x20	; 32
 29c:	33 d0       	rcall	.+102    	; 0x304 <puts>
 29e:	ff cf       	rjmp	.-2      	; 0x29e <main+0x38>

000002a0 <uart_init>:
char uart_getchar_c0(FILE *stream){
	// Wait for the transmit buffer to be empty
	while ( !( USARTC1.STATUS & USART_TXCIF_bm) );
	
	return USARTC1.DATA;
}
 2a0:	e1 e4       	ldi	r30, 0x41	; 65
 2a2:	f6 e0       	ldi	r31, 0x06	; 6
 2a4:	80 ea       	ldi	r24, 0xA0	; 160
 2a6:	80 83       	st	Z, r24
 2a8:	80 e4       	ldi	r24, 0x40	; 64
 2aa:	80 93 42 06 	sts	0x0642, r24
 2ae:	80 e1       	ldi	r24, 0x10	; 16
 2b0:	80 83       	st	Z, r24
 2b2:	80 93 45 06 	sts	0x0645, r24
 2b6:	81 e1       	ldi	r24, 0x11	; 17
 2b8:	80 93 b6 08 	sts	0x08B6, r24
 2bc:	10 92 b7 08 	sts	0x08B7, r1
 2c0:	10 92 b3 08 	sts	0x08B3, r1
 2c4:	83 e0       	ldi	r24, 0x03	; 3
 2c6:	80 93 b5 08 	sts	0x08B5, r24
 2ca:	88 e1       	ldi	r24, 0x18	; 24
 2cc:	80 93 b4 08 	sts	0x08B4, r24
 2d0:	08 95       	ret

000002d2 <uart_putchar>:
 2d2:	cf 93       	push	r28
 2d4:	c8 2f       	mov	r28, r24
 2d6:	8a 30       	cpi	r24, 0x0A	; 10
 2d8:	11 f4       	brne	.+4      	; 0x2de <uart_putchar+0xc>
 2da:	8d e0       	ldi	r24, 0x0D	; 13
 2dc:	fa df       	rcall	.-12     	; 0x2d2 <uart_putchar>
 2de:	e0 eb       	ldi	r30, 0xB0	; 176
 2e0:	f8 e0       	ldi	r31, 0x08	; 8
 2e2:	91 81       	ldd	r25, Z+1	; 0x01
 2e4:	95 ff       	sbrs	r25, 5
 2e6:	fd cf       	rjmp	.-6      	; 0x2e2 <uart_putchar+0x10>
 2e8:	c0 93 b0 08 	sts	0x08B0, r28
 2ec:	80 e0       	ldi	r24, 0x00	; 0
 2ee:	90 e0       	ldi	r25, 0x00	; 0
 2f0:	cf 91       	pop	r28
 2f2:	08 95       	ret

000002f4 <uart_getchar>:

char uart_getchar(FILE *stream){
	// Wait for the transmit buffer to be empty
	while ( !( USARTC0.STATUS & USART_TXCIF_bm) );
 2f4:	e0 ea       	ldi	r30, 0xA0	; 160
 2f6:	f8 e0       	ldi	r31, 0x08	; 8
 2f8:	81 81       	ldd	r24, Z+1	; 0x01
 2fa:	86 ff       	sbrs	r24, 6
 2fc:	fd cf       	rjmp	.-6      	; 0x2f8 <uart_getchar+0x4>
	
	return USARTC0.DATA;
 2fe:	80 91 a0 08 	lds	r24, 0x08A0
}
 302:	08 95       	ret

00000304 <puts>:
 304:	0f 93       	push	r16
 306:	1f 93       	push	r17
 308:	cf 93       	push	r28
 30a:	df 93       	push	r29
 30c:	e0 91 2e 20 	lds	r30, 0x202E
 310:	f0 91 2f 20 	lds	r31, 0x202F
 314:	23 81       	ldd	r18, Z+3	; 0x03
 316:	21 ff       	sbrs	r18, 1
 318:	1b c0       	rjmp	.+54     	; 0x350 <puts+0x4c>
 31a:	ec 01       	movw	r28, r24
 31c:	00 e0       	ldi	r16, 0x00	; 0
 31e:	10 e0       	ldi	r17, 0x00	; 0
 320:	89 91       	ld	r24, Y+
 322:	60 91 2e 20 	lds	r22, 0x202E
 326:	70 91 2f 20 	lds	r23, 0x202F
 32a:	db 01       	movw	r26, r22
 32c:	18 96       	adiw	r26, 0x08	; 8
 32e:	ed 91       	ld	r30, X+
 330:	fc 91       	ld	r31, X
 332:	19 97       	sbiw	r26, 0x09	; 9
 334:	88 23       	and	r24, r24
 336:	31 f0       	breq	.+12     	; 0x344 <puts+0x40>
 338:	19 95       	eicall
 33a:	89 2b       	or	r24, r25
 33c:	89 f3       	breq	.-30     	; 0x320 <puts+0x1c>
 33e:	0f ef       	ldi	r16, 0xFF	; 255
 340:	1f ef       	ldi	r17, 0xFF	; 255
 342:	ee cf       	rjmp	.-36     	; 0x320 <puts+0x1c>
 344:	8a e0       	ldi	r24, 0x0A	; 10
 346:	19 95       	eicall
 348:	89 2b       	or	r24, r25
 34a:	11 f4       	brne	.+4      	; 0x350 <puts+0x4c>
 34c:	c8 01       	movw	r24, r16
 34e:	02 c0       	rjmp	.+4      	; 0x354 <puts+0x50>
 350:	8f ef       	ldi	r24, 0xFF	; 255
 352:	9f ef       	ldi	r25, 0xFF	; 255
 354:	df 91       	pop	r29
 356:	cf 91       	pop	r28
 358:	1f 91       	pop	r17
 35a:	0f 91       	pop	r16
 35c:	08 95       	ret

0000035e <_exit>:
 35e:	f8 94       	cli

00000360 <__stop_program>:
 360:	ff cf       	rjmp	.-2      	; 0x360 <__stop_program>
